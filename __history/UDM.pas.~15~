unit UDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.FMXUI.Wait, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, IOUtils;

type
  TFormBD = class(TForm)
    FDQueryPessoa: TFDQuery;
    FDConnection1: TFDConnection;
    FDQueryPessoaid: TFDAutoIncField;
    FDQueryPessoanome: TStringField;
    FDQueryPessoausuario: TStringField;
    FDQueryPessoasenha: TStringField;
    FDQueryPessoaendereco: TStringField;
    FDQueryPessoatelefone: TStringField;
    FDQueryIngresso: TFDQuery;
    FDQueryPessoacpf: TStringField;
    FDQueryPessoacep: TStringField;
    FDQueryPessoacidade: TStringField;
    FDQueryPessoauf: TStringField;
    FDQueryPessoabairro: TStringField;
    FDQueryPessoaemail: TStringField;
    FDQueryIngressoid: TFDAutoIncField;
    FDQueryIngressonome: TStringField;
    FDQueryIngressovalor: TBCDField;
    FDQueryIngressoquantidade: TIntegerField;
    FDQueryPessoaimg_usuario: TBlobField;
    FDQueryIngressoimg_ingresso: TBlobField;
    procedure FDConnection1BeforeConnect(Sender: TObject);
    procedure FDConnection1AfterConnect(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormBD: TFormBD;

implementation

{$R *.fmx}

procedure TFormBD.FDConnection1AfterConnect(Sender: TObject);
var
  strSQL: string;
begin
 strSQL := 'create table IF NOT EXISTS pessoa(    ' + //
           'id integer not null primary key autoincrement, ' + //
           'nome varchar(40),                              ' + //
           'cpf varchar(11),                               ' + //
           'telefone varchar(13),                           ' + //
           'cep varchar(10),                               ' + //
           'endereco varchar(60),                          ' + //
           'cidade varchar(60),                            ' + //
           'uf char(2),                                    ' + //
           'bairro varchar(60),                            ' + //
           'usuario varchar(60),                           ' + //
           'email varchar(60),                             ' + //
           'senha varchar(40),                            ' + //
           'img_usuario blob ';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;
  strSQL := ' create table IF NOT EXISTS produto( ' + //
            ' id integer not null primary key autoincrement, ' + //
            ' nome varchar(40),                              ' + //
            ' valor numeric(14,2)                            ' + //
            ' quantidade integer,                            ' + //
            ' img_ingresso blob) ';
  FDConnection1.ExecSQL(strSQL);

  FDQueryPessoa.Active := true;
  FDQueryIngresso.Active := true;
end;

procedure TFormBD.FDConnection1BeforeConnect(Sender: TObject);
var
  strPath: string;
begin
{$IF DEFINED (iOS) or DEFINED(ANDROID)}
  strPath := System.IOUtils.TPath.Combine
  (System.IOutils.TPath.GetDocumentPath,
    'Banco.db');
{$ENDIF}
  FDConnection1.Params.Values['UseUnicode'] := 'False';
  FDConnection1.Params.Values['DATABASE'] := strPath;
end;

end.
